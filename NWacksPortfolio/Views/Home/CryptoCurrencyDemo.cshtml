@model NWacksPortfolio.Models.CryptoCurrencyModel

@{
    ViewBag.Title = "Crypto Currency Demo";
}

@section scripts
{
    <script src="https://d3js.org/d3.v4.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.6.4/angular.min.js"></script>
    <script src="~/Scripts/Home/CryptoD3Script.js"></script>
    <script src="~/Scripts/Home/CryptoAngularScript.js"></script>
    <script src="~/Scripts/Home/CryptoUnderscoreScript.js"></script>
    <script src="~/Scripts/Home/CryptoCurrencyScript.js"></script>
}

@section styles
{
    <link href="~/Content/D3AngularCrypto.css" rel="stylesheet" />
    <link href="~/Content/font-awesome.min.css" rel="stylesheet" />
}

<input type="hidden" id="cryptoData" value="@Model.CryptoData" />

<h1>
    Crypto Currency Demo
</h1>

<div id="mainView" style="display:none">
    <!--D3 graph of crypto data-->
    <div class="container collapsible-panel" data-title="Crypto Currency Graphs using D3.js">
        <h3>Current USD value of top <span class="d3-top-number"></span> most traded currencies</h3>
        <div class="current-value-graph">
        </div>

        <h3>Current USD market cap value of top <span class="d3-top-number"></span> most traded currencies</h3>
        <div class="market-cap-pie-chart">
        </div>
    </div>

    <!--Angular data table of crypto data-->
    <div class="container collapsible-panel" data-title="Crypto Currency data, displayed as a table using Angular.js">
        <div ng-app="cryptoApp" ng-controller="CryptoController">
            <div class="input-group">
                <label>
                    Currencies per Page:
                    <input type="number" min="5" max="{{currencies.length}}" ng-model="recordsPerPage" ng-change="page=1;" />
                </label>
            </div>
            <div class="input-group">
                <label>
                    Page:
                    <input type="number" min="1" max="{{ceiling(currencies.length / recordsPerPage)}}" ng-model="page" />
                </label>
            </div>

            <table class="table-striped table-hover table currency-table">
                <tr>
                    <th class="clickable" ng-click="setSortValue('rank')">
                        Rank 
                        <i class="fa fa-chevron-up" ng-show="sortValue == 'rank'"></i>
                        <i class="fa fa-chevron-down" ng-show="sortValue == '-rank'"></i>
                    </th>
                    <th class="clickable" ng-click="setSortValue('name')">
                        Name
                        <i class="fa fa-chevron-up" ng-show="sortValue == 'name'"></i>
                        <i class="fa fa-chevron-down" ng-show="sortValue == '-name'"></i>
                    </th>
                    <th class="clickable" ng-click="setSortValue('price_usd')">
                        Value per Unit
                        <i class="fa fa-chevron-up" ng-show="sortValue == 'price_usd'"></i>
                        <i class="fa fa-chevron-down" ng-show="sortValue == '-price_usd'"></i>
                    </th>
                    <th class="clickable" ng-click="setSortValue('market_cap_usd')">
                        Market Cap
                        <i class="fa fa-chevron-up" ng-show="sortValue == 'market_cap_usd'"></i>
                        <i class="fa fa-chevron-down" ng-show="sortValue == '-market_cap_usd'"></i>
                    </th>
                </tr>
                <tr ng-repeat="currency in currencies | orderBy:sortValue" ng-show="$index >= ((page - 1) * recordsPerPage) && $index < (page * recordsPerPage)">
                    <td>
                        {{currency.rank}}
                    </td>
                    <td>
                        {{currency.name + ' (' + currency.symbol + ')'}}
                    </td>
                    <td>
                        {{currency.price_usd}}
                    </td>
                    <td>
                        {{currency.market_cap_usd}}
                    </td>
                </tr>
            </table>

            <div class="input-group">
                <label>
                    Page:
                    <input type="number" min="1" max="{{ceiling(currencies.length / recordsPerPage)}}" ng-model="page" />
                </label>
            </div>
            <ul class="pagination">
                <li class="page-item"><a class="page-link clickable" ng-click="page = 1">&laquo;</a></li>
                <li class="page-item"><a class="page-link clickable" ng-click="page = page - 2" ng-show="page > 2">{{page - 2}}</a></li>
                <li class="page-item"><a class="page-link clickable" ng-click="page = page - 1" ng-show="page > 1">{{page - 1}}</a></li>
                <li class="page-item"><a class="page-link clickable">{{page}}</a></li>
                <li class="page-item"><a class="page-link clickable" ng-click="page = page + 1" ng-show="page + 1 < ceiling(currencies.length / recordsPerPage)">{{page + 1}}</a></li>
                <li class="page-item"><a class="page-link clickable" ng-click="page = page + 2" ng-show="page + 1 < ceiling(currencies.length / recordsPerPage)">{{page + 2}}</a></li>
                <li class="page-item"><a class="page-link clickable" ng-click="page = ceiling(currencies.length / recordsPerPage)">&raquo;</a></li>
            </ul>
        </div>
    </div>

    <!--Card tiles generated by underscore.js-->
    <div class="container collapsible-panel" data-title="Crypto Data as Card Tiles generated by Underscore.js">
        <div id="underscoreContainer">
        </div>
    </div>

    <!--AJAX method buttons-->
    <div class="container collapsible-panel" data-title="Ajax Page Control Buttons">
        <div class="row">
            <button type="button" class="btn btn-primary retry-button">Run Default Data Load</button>
            Calls the default API (which is used on page load) to refresh the data on the page
        </div>
        <hr />

        <div class="row">
            <div class="input-group">
                <label>
                    <input type="number" min="1" max="5000" value="200" id="limitInput" />
                    Max number of results to return
                </label>
                <br />
                <label>
                    <input type="number" min="1" max="200" value="10" id="d3ChartLimitInput" />
                    Max number of results to show on the D3 charts
                </label>
            </div>
            <button type="button" class="btn btn-primary" id="limitsApiButton">Reset Page With Limits Set</button>
            Calls the API with an optional parameter, specifying how many currencies to return
        </div>
        <hr />
        
        <div class="row">
            <button type="button" class="btn btn-primary" id="bitcoinButton">Get Bitcoin Data</button>
            Calls the API to return just data for Bitcoin
            <hr />
            <button type="button" class="btn btn-primary" id="ethereumButton">Get Ethereum Data</button>
            Calls the API to return just data for Ethereum
            <hr />
            <button type="button" class="btn btn-primary" id="litecoinButton">Get Litecoin Data</button>
            Calls the API to return just data for Litecoin
            <hr />
            <button type="button" class="btn btn-danger" id="errorButton">Cause Error</button>
            Calls the API to intentionally return an error
        </div>
    </div>
</div>

<div id="errorView" style="display:none">
    <!--Display a basic error message-->
    <div class="jumbotron">
        <h2>Sorry, we have encountered an error:</h2>
        <p id="errorMessage"></p>
        <button type="button" class="btn btn-primary retry-button">Retry Default Data Load</button>
    </div>
</div>